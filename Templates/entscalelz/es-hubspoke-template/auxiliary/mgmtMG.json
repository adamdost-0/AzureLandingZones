{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "managementSubscriptionId": {
            "type": "string",
            "maxLength": 36
        },
        "enableLogAnalytics": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "retentionInDays": {
            "type": "string"
        },
        "subnetMaskForAzFw": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "metadata": {
                "displayName": "location",
                "description": "Location of the HUB"
            },
            "defaultValue": "[deployment().location]"
        },
        "management_vnet_address_space": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the Management VNET"
            }
        },
        "management_subnet_address_prefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the Management Subnet"
            }
        },
        "hubSubscriptionId": {
                    "type": "string"
        }
    },
    "variables": {
        "policyDefinitions": {
            "deployLogAnalytics": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics')]"
        },
        "policyAssignmentNames": {
            "logAnalytics": "Deploy-Log-Analytics"
        },
        "rbacOwner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
        "roleAssignmentNames": {
            "deployLogAnalytics": "[guid(concat(parameters('topLevelManagementGroupPrefix'), variables('policyAssignmentNames').logAnalytics))]"
        },
        "resourceDeploymentName": "[take(concat('mgmt', deployment().location, deployment().name), 64)]",
        "FWFirstOctet": "[split(split(parameters('subnetMaskForAzFw'),'/')[0],'.')[0]]",
        "FWSecondOctet": "[split(split(parameters('subnetMaskForAzFw'),'/')[0],'.')[1]]",
        "FWThirdOctet": "[split(split(parameters('subnetMaskForAzFw'),'/')[0],'.')[2]]",
        "FWFourthOctet": "[string(add(int(split(split(parameters('subnetMaskForAzFw'),'/')[0],'.')[3]),4))]",
        "azure_firewall_ip": "[concat(variables('FWFirstOctet'),'.',variables('FWSecondOctet'),'.',variables('FWThirdOctet'),'.',variables('FWFourthOctet'))]",
        "ManagementVNETName": "[concat(parameters('topLevelManagementGroupPrefix'), '-Management-', parameters('location'))]",
        "ManagementVnettoHubVnetPeeringName": "[concat(variables('ManagementVnetName'),'-HubVnet')]",
        "HubVnettoManagementVnetPeeringName": "[concat('HubVnet-',variables('ManagementVnetName'))]",
        "ManagementVnetRG": "[concat(parameters('topLevelManagementGroupPrefix'), '-management-connectivity')]",
        "hubResourceGroupName": "[concat(parameters('topLevelManagementGroupPrefix'), '-connectivity')]",
        "hubvNetName": "[concat(parameters('topLevelManagementGroupPrefix'), '-hub-', parameters('location'))]"
    },
    "resources": [
        {
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').loganalytics]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-Log-Analytics",
                "displayName": "Deploy-Log-Analytics",
                "policyDefinitionId": "[variables('policyDefinitions').deployLogAnalytics]",
                "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '-management')]",
                "parameters": {
                    "workspaceName": {
                        "value": "[concat(parameters('topLevelManagementGroupPrefix'), '-la-', parameters('managementSubscriptionId'))]"
                    },
                    "automationAccountName": {
                        "value": "[concat(parameters('topLevelManagementGroupPrefix'), '-a-', parameters('managementSubscriptionId'))]"
                    },
                    "workspaceRegion": {
                        "value": "[deployment().location]"
                    },
                    "automationRegion": {
                        "value": "[deployment().location]"
                    },
                    "rgName": {
                        "value": "[concat(parameters('topLevelManagementGroupPrefix'), '-mgmt')]"
                    },
                    "retentionInDays": {
                        "value": "[parameters('retentionInDays')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[variables('roleAssignmentNames').deployLogAnalytics]",
            "dependsOn": [
                "[variables('policyAssignmentNames').loganalytics]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', variables('rbacOwner'))]",
                "principalId": "[toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').loganalytics), '2018-05-01', 'Full' ).identity.principalId)]"
            }
        },
        {
            "condition": "[and(not(empty(parameters('managementSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceDeploymentName')]",
            "location": "[deployment().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments/', variables('roleAssignmentNames').deployLogAnalytics)]"
            ],
            "subscriptionId": "[parameters('managementSubscriptionId')]",
            "properties": {
                "mode": "incremental",
                "template": "[reference(variables('policyDefinitions').deployLogAnalytics, '2018-05-01').policyRule.then.details.deployment.properties.template]",
                "parameters": "[reference(concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '-management', '/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').loganalytics), '2018-05-01').parameters]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "DefaultNSG",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "securityRules": [{
                        "name": "Allow_Any",
                        "properties": {
                            "description": "This is the first rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    }
                ]
            }                    
        },
        {
            "name": "DefaultRouteTable",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "properties": {
                        "addressPrefix": "0.0.0.0/0",
                        "nextHopType": "VirtualAppliance",
                        "nextHopIpAddress": "[variables('azure_firewall_ip')]"
                        },
                        "name": "DefaultRoute"
                    }
                ],
                "disableBgpRoutePropagation": "True"
            }
        },                
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('ManagementVnetName')]",
            "location": "[parameters('location')]",
            "dependsOn": ["DefaultNSG","DefaultRouteTable"],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('management_vnet_address_space')]"
                    ]
                },
                "subnets": [     
                    {
                        "name": "management",
                        "properties": {
                            "addressPrefix": "[parameters('management_subnet_address_prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'DefaultNSG')]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', 'DefaultRouteTable')]"
                            }
                        }
                    }
                ]
            },
            "resources":[
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('ManagementVnettoHubVnetPeeringName')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('ManagementVnetName'))]"
                    ],
                    "comments": "This is the peering from Management VNET to HubVnet",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "false",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('hubvNetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "nestedDeployment",
            "subscriptionId": "[parameters('hubSubscriptionId')]",
            "resourceGroup": "[variables('hubResourceGroupName')]",
            "dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', variables('ManagementVnetName'))]"],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",                        
                    "resources": [
                        {
                            "apiVersion": "2020-05-01",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(variables('hubvNetName'),'/',variables('HubVnettoManagementVnetPeeringName'))]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                            ],
                            "comments": "This is the peering from HubVnet to ManagementVnet",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "false",
                                "allowGatewayTransit": "false",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(parameters('managementSubscriptionId'), variables('ManagementVnetRG'), 'Microsoft.Network/virtualNetworks', variables('ManagementVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}